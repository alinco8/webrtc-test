(()=>{"use strict";class e{rtcPeerConnection;channel;candidate=[];localStream;constructor(){}async createConnection(){await this.setLocalStream({video:!0,audio:!1}),this.rtcPeerConnection=new RTCPeerConnection({iceServers:[{urls:"stun:stun.l.google.com:19302"}]}),this.channel=this.rtcPeerConnection.createDataChannel("channel"),this.channel.addEventListener("message",(e=>{console.log(e.data)})),this.channel.addEventListener("open",(e=>{console.log("channel opened")})),this.channel.addEventListener("close",(e=>{console.log("channel closed")})),this.rtcPeerConnection.addEventListener("icecandidate",(e=>{e.candidate&&this.candidate.push(e.candidate)})),this.rtcPeerConnection.addEventListener("track",(e=>{document.getElementById("local").srcObject=e.streams[0]})),this.localStream.getTracks().forEach((e=>{this.rtcPeerConnection.addTrack(e,this.localStream)})),console.log("connection created")}async setLocalStream(e){this.localStream=await navigator.mediaDevices.getUserMedia(e)}async receiveIceCandidate(e){JSON.parse(e).forEach((e=>{this.rtcPeerConnection.addIceCandidate(e)}))}}window.RTCSender=new class extends e{offer;remoteStream;constructor(){super()}async createOffer(){this.offer=await this.rtcPeerConnection.createOffer(),this.rtcPeerConnection.setLocalDescription(this.offer)}async receiveAnswer(e){this.rtcPeerConnection.setRemoteDescription(JSON.parse(e))}},window.RTCReceiver=new class extends e{answer;constructor(){super()}async receiveOffer(e){await this.rtcPeerConnection.setRemoteDescription(JSON.parse(e)),this.answer=await this.rtcPeerConnection.createAnswer(),this.rtcPeerConnection.setLocalDescription(this.answer)}}})();
//# sourceMappingURL=bundle.js.map